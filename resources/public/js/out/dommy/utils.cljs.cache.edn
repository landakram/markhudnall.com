;; Analyzed by ClojureScript 1.7.170
{:name dommy.utils, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {dissoc-in {:protocol-inline nil, :meta {:file "/Users/mark/Documents/code/markhudnall/resources/public/js/out/dommy/utils.cljs", :line 3, :column 7, :end-line 3, :end-column 16, :arglists (quote ([m [k & ks]])), :doc "Dissociate this keyseq from m, removing any empty maps created as a result\n   (including at the top-level)."}, :name dommy.utils/dissoc-in, :variadic false, :file "resources/public/js/out/dommy/utils.cljs", :end-column 16, :method-params ([m p__22346]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m [k & ks]])), :doc "Dissociate this keyseq from m, removing any empty maps created as a result\n   (including at the top-level)."}, ->Array {:protocol-inline nil, :meta {:file "/Users/mark/Documents/code/markhudnall/resources/public/js/out/dommy/utils.cljs", :line 14, :column 7, :end-line 14, :end-column 14, :arglists (quote ([array-like]))}, :name dommy.utils/->Array, :variadic false, :file "resources/public/js/out/dommy/utils.cljs", :end-column 14, :method-params ([array-like]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([array-like]))}, as-str {:protocol-inline nil, :meta {:file "/Users/mark/Documents/code/markhudnall/resources/public/js/out/dommy/utils.cljs", :line 17, :column 7, :end-line 17, :end-column 13, :arglists (quote ([s])), :doc "Coerces strings and keywords to strings, while preserving namespace of\n   namespaced keywords"}, :name dommy.utils/as-str, :variadic false, :file "resources/public/js/out/dommy/utils.cljs", :end-column 13, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Coerces strings and keywords to strings, while preserving namespace of\n   namespaced keywords"}, class-match? {:protocol-inline nil, :meta {:file "/Users/mark/Documents/code/markhudnall/resources/public/js/out/dommy/utils.cljs", :line 25, :column 16, :end-line 25, :end-column 28, :tag boolean, :arglists (quote ([class-name class idx])), :doc "Does `class-name` string have class starting at index idx.\n   only will be used when Element::classList doesn't exist"}, :name dommy.utils/class-match?, :variadic false, :file "resources/public/js/out/dommy/utils.cljs", :end-column 28, :method-params ([class-name class idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :ret-tag boolean, :end-line 25, :max-fixed-arity 3, :tag boolean, :fn-var true, :arglists (quote ([class-name class idx])), :doc "Does `class-name` string have class starting at index idx.\n   only will be used when Element::classList doesn't exist"}, class-index {:protocol-inline nil, :meta {:file "/Users/mark/Documents/code/markhudnall/resources/public/js/out/dommy/utils.cljs", :line 39, :column 15, :end-line 39, :end-column 26, :tag number, :arglists (quote ([class-name class])), :doc "Finds the index of class in a space-delimited class-name\n    only will be used when Element::classList doesn't exist"}, :name dommy.utils/class-index, :variadic false, :file "resources/public/js/out/dommy/utils.cljs", :end-column 26, :method-params ([class-name class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :ret-tag number, :end-line 39, :max-fixed-arity 2, :tag number, :fn-var true, :arglists (quote ([class-name class])), :doc "Finds the index of class in a space-delimited class-name\n    only will be used when Element::classList doesn't exist"}, remove-class-str {:protocol-inline nil, :meta {:file "/Users/mark/Documents/code/markhudnall/resources/public/js/out/dommy/utils.cljs", :line 50, :column 7, :end-line 50, :end-column 23, :arglists (quote ([init-class-name class]))}, :name dommy.utils/remove-class-str, :variadic false, :file "resources/public/js/out/dommy/utils.cljs", :end-column 23, :method-params ([init-class-name class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([init-class-name class]))}}}